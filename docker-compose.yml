version: "3.9"

services:
  # api:
  #   build:
  #     context: .
  #     dockerfile: deployment/docker-images/api/api.Dockerfile
  #   container_name: standard-api
  #   ports:
  #     - 8082:8082
  #   env_file:
  #     - deployment/env/api.env
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  db:
    build:
      context: .
      dockerfile: deployment/docker-images/postgres/postgres.Dockerfile
    container_name: standard-db
    ports:
      - 8080:5432
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 30s
      timeout: 5s
      retries: 5
  liquibase:
    image: liquibase/liquibase:4.31-alpine
    container_name: standard-liquibase
    volumes:
      - ./deployment/docker-images/liquibase:/liquibase/standard-service
    working_dir: /liquibase/standard-service
    command: >
      bash -c "
      liquibase --defaultsFile=/liquibase/standard-service/properties/standard-service.properties update
      "
    # this update liquibase --defaultsFile=/liquibase/standard-service/properties/standard-service.properties update
    # this roll back liquibase --defaultsFile=/liquibase/standard-service/properties/standard-service.properties rollbackCount 1
    depends_on:
      db:
        condition: service_healthy

  redis:
    image: redis:7.4.1-alpine
    container_name: standard-redis
    ports:
      - 8081:6379
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 30s
      timeout: 5s
      retries: 5

volumes:
  db-data:
  redis-data:
